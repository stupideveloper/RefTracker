// src/internal/ws.ts
import {STATUS_CODES as p} from "worktop";
import {byteLength as d} from "worktop/utils";
function r(t) {
  let e = p[t];
  return new Response(e, {
    status: t,
    statusText: e,
    headers: {
      Connection: "close",
      "Content-Type": "text/plain",
      "Content-Length": "" + d(e)
    }
  });
}

// src/ws.ts
var f = function(t) {
  if (t.method !== "GET")
    return r(405);
  let e = t.headers.get("upgrade");
  if (e !== "websocket")
    return r(426);
  if (e = (t.headers.get("sec-websocket-key") || "").trim(), !/^[+/0-9A-Za-z]{22}==$/.test(e))
    return r(400);
  if (e = t.headers.get("sec-websocket-version"), e !== "13")
    return r(400);
};
function v(t) {
  return function(e, a) {
    let s = f(e, a);
    if (s)
      return s;
    let {0: l, 1: n} = new WebSocketPair(), u = {};
    function i(o) {
      return t(e, {
        send: n.send.bind(n),
        close: n.close.bind(n),
        context: u,
        event: o
      });
    }
    async function c(o) {
      try {
        await i(o);
      } finally {
        n.close();
      }
    }
    return n.accept(), n.addEventListener("close", c), n.addEventListener("message", i), n.addEventListener("error", c), new Response(null, {
      status: 101,
      statusText: "Switching Protocols",
      webSocket: l
    });
  };
}
export {
  f as connect,
  v as listen
};
